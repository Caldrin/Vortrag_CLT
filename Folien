                Vorurteile Objektsystem
                =======================
* Objektsystem mit bless ist state-of-the-art .. für Ramses III ;-)
* Vorurteil -> "Perl kann kein vernünftiges OO"


                Vorurteil Programmierstil
                =========================
* Beispiel vom JAPH
* TIMTOWTDI, fast immer mehrere Wege, unter anderem auch ein umständlicher und
  schwer lesbarer
* Vorurteil -> "Perl Code ist unlesbar und ein Maintainance-Alptraum"


                Vorurteil Projekte
                ==================
* Perl eignet sich für kleine Wegwerfscripte
* das war einer der Gründe für die Geburt von Perl
* Vorurteil -> "Für große Projekte ist Perl ungeeignet und der sichere Weg ins
  Desaster"

                Ein bisschen Geschichte (1)
                ===========================
* Vorläufer awk, sed, Shell, C
* "Principle of least surprise" für Entwickler dieser Sprachen
* daher stammen ein paar Entscheidungen, die man heute nicht mehr einbauen
  würde

                Ein bisschen Geschichte (2)
                ===========================
* zweiter großer Schritt -> "The Internet" / Dot-Com-Blase
* Jeder und sein kleiner Bruder baut "Webapplikationen"
** aus der Zeit stammt jege Menge Schrottcode
* Matt's Scriptarchiv anyone?


                Ein bisschen Geschichte (3)
                ===========================
* Larry kündigt Perl6-Entwicklung an
* Perl5-Entwicklung schläft ein, wird von anderen Sprachen eingeholt


                Ein bisschen Geschichte - Die Gegenwart
                =======================================
* Perl5-Entwicklung nimmt wieder Fahrt auf
* Perl5 und Perl6 werden nebeneinander existieren (wie C und C++)
* Coole Sachen entstehen


                Neues in Perl seit 5.10
                =======================
* say - klein aber nützlich
* given/when - endlich ein switch
* smartmatch, // (ein Wort zur dor-Debatte?)
* Releases in jedem Frühling (5.12)
(* vernünftiges Perl auf Windows - Strawberry)


                CPAN
                ====
* das zentrale Archiv für Perlmodule
** wenn es dort nicht ist, exisiert es nicht (kein Wort zu DarkPAN)
* Es gibt auf CPAN Module für ALLES
* Module in Distributionen (lib/, t/, script/)
* jeder kann hochladen, dadurch auch weniger gute Module
* Reviews, Bugreports, CPAN-Testers lesen
* sehr erfolgreiche und wichtige Module in Core
** manche Chefs erlauben keine nachinstallierten Module, dann nur Core
** Perl ohne CPAN ist wie Auto fahren ohne Gangschaltung


                Testing
                =======
* TAP (Folien von Steffen klauen *g*)
* Test ausführen mit prove
** Wrapper um Perl
* Tests automatisch beim installieren eines Moduls ausgeführt


                Test::*
                =======
* Simpel - Test::More
** is, isnt, like
* fortgeschritten - Bsp. Test::Deeply
** cmp_deeply(\@result, [all, any, bag, subhashof, superhashof]())
* eigene Tests mit Test::Builder bauen
* Test::Kwalitee - Bundle mit Default-Tests


                 Test Unterstüztung
                 ==================
* Test::MockModule (Mock::Class, ...)
* Funktionen fürs Testing überschreiben
** Bsp. mkfs
* Test::Fixture::*
* Datenbankschema + Inhalt als YAML beschreiben


                 Moose
                 =====
* package Name; use Moose
-> jetzt haben wir ein Klasse Name
* subs im Package sind Methoden
* Attribute durch has attribute => (..Eigenschaften..)
* Einfachvererbung - extends $parentname


                  MooseX
                  ======
* Singletons - für Javafreunde ;-)
* Roles - Mehrfachvererbung (aka Mixin)
* Parametervalidierung
** MooseX::Params::Validate - stabil
** MooseX::Methods::Signature - alpa aber megagenial
* Daemonize - Moose-basierte Daemons (start, stop, status, ..)
* Declare - syntaktischer Zucker

