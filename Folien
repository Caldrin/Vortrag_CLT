                Neues in Perl seit 5.10
                =======================
* say - klein aber nützlich
* given/when - endlich ein switch
* smartmatch, // (ein Wort zur dor-Debatte?)
* vernünftiges Perl auf Windows - Strawberry


                Neues in Perl seit 5.12
                =======================
* Releases in jedem Frühling
* extensible Keywords - Devel::Declare in Perl
* komplettester Unicode-Support


                CPAN
                ====
* das zentrale Archiv für Perlmodule
** wenn es dort nicht ist, exisiert es nicht (kein Wort zu DarkPAN)
* Es gibt auf CPAN Module für ALLES
* Module in Distributionen (lib/, t/, script/)
* jeder kann hochladen, dadurch auch weniger gute Module
* Reviews, Bugreports, CPAN-Testers lesen
* sehr erfolgreiche und wichtige Module in Core
** manche Chefs erlauben keine nachinstallierten Module, dann nur Core
** Perl ohne CPAN ist wie Auto fahren ohne Gangschaltung


                Testing
                =======
* TAP (Folien von Steffen klauen *g*)
* Test ausführen mit prove
** Wrapper um Perl
* Tests automatisch beim installieren eines Moduls ausgeführt


                Test::*
                =======
* Simpel - Test::More
** is, isnt, like
* fortgeschritten - Bsp. Test::Deeply
** cmp_deeply(\@result, [all, any, bag, subhashof, superhashof]())
* eigene Tests mit Test::Builder bauen
* Test::Kwalitee - Bundle mit Default-Tests


                 Test Unterstüztung
                 ==================
* Test::MockModule (Mock::Class, ...)
* Funktionen fürs Testing überschreiben
** Bsp. mkfs
* Test::Fixture::*
** Datenbankschema + Inhalt als YAML beschreiben


                 Moose
                 =====
* package Name; use Moose
-> jetzt haben wir ein Klasse Name
* subs im Package sind Methoden
* Attribute durch has attribute => (..Eigenschaften..)
* Einfachvererbung - extends $parentname


                  MooseX
                  ======
* Singletons - für Javafreunde ;-)
* Roles - Mehrfachvererbung (aka Mixin)
* Parametervalidierung
** MooseX::Params::Validate - stabil
** MooseX::Methods::Signature - alpa aber megagenial
* Daemonize - Moose-basierte Daemons (start, stop, status, ..)
* Declare - syntaktischer Zucker

                 RegEx
                 =====
* Grammars
* named Backreferencen
* Look ahead, look behind (kompletteste Regexp)
* Perl regex in anderen Sprachen, trotzdem noch hinter Perl hinterher

                DBIx::Class
                ===========
* SQL::Abstract - wandelt alles in SQL um


                Code-Generierung
                ================
* Syntaxvielfalt erlaubt Codegenerierung
* Regexp::Grammars
* Parse::RecDescent